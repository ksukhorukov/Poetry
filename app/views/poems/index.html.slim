- model_class = Poem
.page-header
  h1=t '.title', :default => model_class.model_name.human.pluralize.titleize
= paginate @poems
table.table.table-striped
  thead
    tr
      th= model_class.human_attribute_name(:id)
      th= model_class.human_attribute_name(:title)
      th= model_class.human_attribute_name(:content)
      th= model_class.human_attribute_name(:metaphor)
      th= model_class.human_attribute_name(:user_id)
      th= model_class.human_attribute_name(:created_at)
      th=t '.actions', :default => t("helpers.actions")
  tbody
    - @poems.each do |poem|
      tr
        td= link_to poem.id, poem_path(poem)
        td= link_to poem.title, poem_path(poem)
        td= raw poem.content.gsub(/\r\n/, '<br/>')
        td= poem.metaphor
        td= poem.user.email
        td=l poem.created_at
        td
          - if current_user.present? && current_user == poem.user
            = link_to t('.edit', :default => t("helpers.links.edit")), edit_poem_path(poem), :class => 'btn btn-default btn-xs'
            '
            = link_to t('.destroy', :default => t("helpers.links.destroy")), poem_path(poem), :method => :delete, :data => { :confirm => t('.confirm', :default => t("helpers.links.confirm", :default => 'Are you sure?')) }, :class => 'btn btn-xs btn-danger'
          - else
            = link_to t('.show', :default => t("helpers.links.show")), poem_path(poem), :class => 'btn btn-default btn-xs'
= paginate @poems
br


= link_to t('.new', :default => t("helpers.links.new")), new_poem_path, :class => 'btn btn-primary', style: 'zoom:2;'
